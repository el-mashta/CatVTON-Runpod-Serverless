# ====================================================================================\n# Stage 1: Model Downloader\n# This stage's only job is to download all the necessary models from Hugging Face.\n# This avoids downloading them on every cold start of the serverless worker.\n# ====================================================================================`nFROM python:3.9-slim as downloader\n\n# Install huggingface-cli for robust model downloading`nRUN pip install huggingface_hub\n\n# Set the cache directory where all models will be stored`nENV HF_HOME=/models`nENV HUGGINGFACE_HUB_CACHE=/models\n\n# Download the base Stable Diffusion model.`n# --local-dir-use-symlinks False is crucial for Docker layer caching.`nRUN huggingface-cli download booksforchong/stable-diffusion-inpainting \`n    --local-dir ${HF_HOME}/stable-diffusion-inpainting --local-dir-use-symlinks False\n\n# Download the CatVTON fine-tuned weights and supporting models (DensePose, SCHP).`nRUN huggingface-cli download zhengchong/CatVTON \`n    --local-dir ${HF_HOME}/CatVTON --local-dir-use-symlinks False\n\n# ====================================================================================`n# Stage 2: Final Production Image`n# This is the final, lean image that will be deployed. It uses a direct`n# Python pipeline instead of the heavier ComfyUI backend.`n# ====================================================================================`nFROM runpod/pytorch:2.1-py3.10-cuda12.1.1-devel-ubuntu22.04\n\n# Set the working directory`nWORKDIR /app\n\n# Install system dependencies that might be required for Python packages`nRUN apt-get update && apt-get install -y --no-install-recommends \`n    build-essential \`n    && rm -rf /var/lib/apt/lists/*\n\n# Copy the CatVTON library code into the image`nCOPY ./CatVTON /app/CatVTON\n\n# Copy the pre-downloaded models from our downloader stage into a /models directory`nCOPY --from=downloader /models /app/models\n\n# Set environment variables to point to the pre-downloaded models`n# This prevents the application from trying to download them at runtime.`nENV BASE_MODEL_PATH=/app/models/stable-diffusion-inpainting`nENV RESUME_PATH=/app/models/CatVTON\n\n# Install Python dependencies using uv for speed.`n# The runpod/pytorch base image already includes uv.`nCOPY ./CatVTON/requirements.txt .`nRUN uv pip install --system -r requirements.txt\n\n# Install API server dependencies`nRUN uv pip install --system fastapi uvicorn python-multipart pydantic\n\n# Copy our application file into the container`nCOPY app.py .\n\n# Expose the port our API will run on`nEXPOSE 8000\n\n# The final command to start our FastAPI server.`nCMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]`n