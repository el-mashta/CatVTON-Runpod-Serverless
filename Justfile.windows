# Justfile for the Full Network Volume Architecture on Windows
# ==============================================================================

# Automatically load environment variables from a .env file for S3 credentials
set dotenv-load

# Set PowerShell as the default shell for all recipes on Windows
set windows-shell := ["powershell.exe", "-NoProfile", "-Command"]

# ==============================================================================
# Variables
# ==============================================================================

# Image name for the lightweight launcher build
IMAGE_NAME_VOLUME := "elmashta/catvton-runpod-serverless:volume-launcher"

# --- User Configuration ---
# These variables MUST be set by the user, either here or in a .env file.
# They are required for the `setup-volume-upload` command.
RUNPOD_S3_ENDPOINT_URL      := env("RUNPOD_S3_ENDPOINT_URL", "")
RUNPOD_S3_ACCESS_KEY_ID     := env("RUNPOD_S3_ACCESS_KEY_ID", "")
RUNPOD_S3_SECRET_ACCESS_KEY := env("RUNPOD_S3_SECRET_ACCESS_KEY", "")
RUNPOD_S3_BUCKET_NAME       := env("RUNPOD_S3_BUCKET_NAME", "") # This is your Network Volume ID

# ==============================================================================
# Default Task - Documentation
# ==============================================================================

# List all available commands
default:
    @echo "Usage: just -f Justfile.windows <command>"
    @echo ""
    @echo "This Justfile is for the Network Volume architecture."
    @echo ""
    @echo "--- Main Workflow ---"
    @echo "  build-volume         : Build the lightweight launcher Docker image."
    @echo "  push-volume          : Push the launcher image to a registry."
    @echo ""
    @echo "--- ONE-TIME SETUP for Network Volume ---"
    @echo "  setup-volume-download: Download all required models to your local machine."
    @echo "  setup-volume-upload  : Sync local models and code to your RunPod Network Volume."
    @just --list

# ==============================================================================
# Docker Image Workflow
# ==============================================================================

# Build the lightweight launcher Docker image
build-volume:
    docker buildx build --platform linux/amd64 --load -f Dockerfile.volume -t {{IMAGE_NAME_VOLUME}} .
    @echo "Launcher image built: {{IMAGE_NAME_VOLUME}}"

# Build and push the launcher Docker image
push-volume: build-volume
    docker push {{IMAGE_NAME_VOLUME}}
    @echo "Launcher image pushed: {{IMAGE_NAME_VOLUME}}"

# ==============================================================================
# Network Volume Setup Workflow (ONE-TIME TASK)
# ==============================================================================

# [SETUP STEP 1] Download all necessary models to a local `./models` directory.
setup-volume-download:
    @echo "Downloading models from Hugging Face..."
    @echo "This may take some time depending on your connection."
    huggingface-cli download runwayml/stable-diffusion-inpainting --local-dir ./models/stable-diffusion-inpainting
    huggingface-cli download zhengchong/CatVTON --local-dir ./models/CatVTON
    @echo "Model downloads complete. They are located in the './models' directory."

# [SETUP STEP 2] Upload the models and the CatVTON source code to your network volume.
setup-volume-upload:
    @echo "--- Preparing to sync files to RunPod Network Volume ---"
    @if [ -z "{{RUNPOD_S3_BUCKET_NAME}}" ]; then `
        echo "ERROR: Environment variables for RunPod S3 are not set."; `
        echo "Please set RUNPOD_S3_ENDPOINT_URL, RUNPOD_S3_ACCESS_KEY_ID, RUNPOD_S3_SECRET_ACCESS_KEY, and RUNPOD_S3_BUCKET_NAME in your .env file."; `
        exit 1; `
    fi
    @echo "Syncing ./models directory..."
    aws s3 sync ./models s3://{{RUNPOD_S3_BUCKET_NAME}}/models --region us-east-1 --endpoint-url {{RUNPOD_S3_ENDPOINT_URL}}
    @echo "Syncing ./CatVTON source code directory..."
    aws s3 sync ./CatVTON s3://{{RUNPOD_S3_BUCKET_NAME}}/CatVTON --region us-east-1 --endpoint-url {{RUNPOD_S3_ENDPOINT_URL}}
    @echo "--- Sync complete! ---"
    @echo "Your network volume is now set up."